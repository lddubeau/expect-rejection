{
  "name": "expect-rejection",
  "version": "2.0.0",
  "private": true,
  "description": "A minimal way to test rejections.",
  "keywords": [
    "testing",
    "rejection",
    "promise",
    "chai",
    "expect"
  ],
  "homepage": "https://github.com/lddubeau/expect-rejection#readme",
  "repository": {
    "type": "git",
    "url": "https://github.com/lddubeau/expect-rejection.git"
  },
  "bugs": "https://github.com/lddubeau/expect-rejection/issues",
  "author": "Louis-Dominique Dubeau <ldd@lddubeau.com>",
  "license": "MIT",
  "main": "expect-rejection.js",
  "types": "expect-rejection.d.ts",
  "dependencies": {
    "chai": "^4.2.0"
  },
  "devDependencies": {
    "@commitlint/cli": "^8.2.0",
    "@commitlint/config-angular": "^8.2.0",
    "@types/chai": "^4.2.4",
    "@types/mocha": "^5.2.7",
    "conventional-changelog-cli": "^2.0.27",
    "husky": "^3.0.9",
    "mocha": "^10.2.0",
    "npm-package-json-lint": "^4.1.0",
    "npm-package-json-lint-config-lddubeau": "^1.1.0",
    "source-map-support": "^0.5.16",
    "ts-node": "^8.5.0",
    "tslint": "^5.20.1",
    "tslint-config-lddubeau": "^4.1.0",
    "typescript": "^3.7.2"
  },
  "scripts": {
    "tsc": "tsc -p tsconfig.json",
    "clean-package": "sed -e'/private/d' package.json > build/dist/package.json",
    "build": "npm run tsc && npm run clean-package && cp README.md build/dist/",
    "lint": "tslint --format verbose -p tsconfig.json && tslint --format verbose -p test/tsconfig.json && npmPkgJsonLint ./package.json",
    "test": "mocha",
    "posttest": "npm run lint",
    "build-and-test": "npm run build && npm run test",
    "prepack": "node -e 'require(\"assert\")(!require(\"./package.json\").private)'",
    "self:pack": "cd build/dist/ && (packname=`npm pack --silent`; mv $packname ..; echo $packname)",
    "prepublishOnly": "node -e 'require(\"assert\")(!require(\"./package.json\").private)'",
    "self:publish": "npm run build-and-test && (cd build/dist && npm publish)",
    "postpublish": "git push origin --follow-tags",
    "version": "conventional-changelog -p angular -i CHANGELOG.md -s && git add CHANGELOG.md",
    "postversion": "npm run self:publish",
    "clean": "rm -rf build"
  },
  "husky": {
    "hooks": {
      "commit-msg": "commitlint -e $HUSKY_GIT_PARAMS"
    }
  }
}
